package templates

import "fmt"

type BookCard struct {
	Author   string
	Name     string
	ImageURL string
}

templ bookCard(author string, title string) {
	<div
		class="flex flex-col-reverse bg-gradient-to-t from-black to-transparent p-2 rounded-xl grow max-h-[50%] opacity-100 hover:opacity-0"
	>
		<h2 class="mb-0.5 lg:mb-2 text-xs italic text-white">{ author }</h2>
		<h3
			class={ templ.KV("line-clamp-2", strings.ContainsRune(title, ' ')),
				templ.KV("truncate", !strings.ContainsRune(title, ' ')),
				"text-pretty", "mb-0.5", "lg:mb-2", "text-xs", "font-bold", "text-white" }
		>
			{ title }
		</h3>
	</div>
}

css backgroundImg(url string) {
	background-image: { templ.SafeCSSProperty(fmt.Sprintf("url('%s')",url)) };
}

/*background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
*/

templ bookCardWrapper(info BookCard) {
	<div
		class={
			"flex",
			"flex-col-reverse aspect-[10/16] w-11/12 rounded-xl shadow-black bg-zinc-900 m-auto",
			"bg-center",
			"bg-no-repeat",
			templ.KV(backgroundImg(info.ImageURL), info.ImageURL != ""),
			templ.KV("bg-cover", info.ImageURL != ""),
			templ.KV(backgroundImg("/assets/thenounproject-white.png"), info.ImageURL == ""),
			templ.KV("bg-contain", info.ImageURL == ""),
		}
	>
		@bookCard(info.Author, info.Name)
	</div>
}

templ thebookGrid() {
	<div class="grid grid-cols-3 lg:grid-cols-6 gap-y-2 place-content-evenly">
		{ children... }
	</div>
}

templ BookCardsPage(info []BookCard) {
	@PageWithoutOverlap("MainPage") {
		@thebookGrid() {
			for _, nfo := range info {
				@bookCardWrapper(nfo)
			}
		}
		<div class="sticky bottom-1 right-1 bg-purple-500 flex-row flex place-items-end">
			<div class="bg-cyan-500 grow-0">
				<p>+</p>
			</div>
			<div class="grow"></div>
		</div>
	}
}
